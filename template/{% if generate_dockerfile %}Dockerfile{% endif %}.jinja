# syntax=docker/dockerfile:1
# Keep this syntax directive! It's used to enable Docker BuildKit
# This dockerfile is adapted from:
# https://depot.dev/docs/container-builds/how-to-guides/optimal-dockerfiles/python-uv-dockerfile
# and https://github.com/astral-sh/uv-docker-example/blob/main/multistage.Dockerfile

FROM python:{{ python_version }}-slim-bookworm AS base

############################
# Set up the builder layer #
############################
FROM base as builder
COPY --from=ghcr.io/astral-sh/uv:{{ uv_version }} /uv /bin/uv

ENV UV_COMPILE_BYTECODE=1 \
    UV_LINK_MODE=copy \
    UV_PYTHON_DOWNLOADS=0
WORKDIR /app

# DL3008 is ok to ignore because `apt-get update` runs in the same RUN command,
# and apt cache will not be stale, so outdated packages will not be installed.
# We need to install some stuff for hadolint
# hadolint ignore=DL3008
RUN apt-get update \
  && apt-get install -y --no-install-recommends curl git build-essential

# Copy .env file as a secret to enable installing packages from
# private registries
# Ignore the DL4006 warning from hadolint because we only
# run the export command if the .env file exists
# Ignore the SC2046 as the values returned by the grep can not
# contain spaces so no separation is possible
# hadolint ignore=DL4006,SC2046
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    --mount=type=secret,id=buildenv,required=false,target=.env \
    if [ -f .env ]; then \
      export $(grep 'UV_INDEX' .env | xargs); \
    fi; \
    uv sync --locked --no-dev --no-install-project;

COPY . /app


# Install the project
# hadolint ignore=DL4006,SC2046
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=secret,id=buildenv,required=false,target=.env \
    if [ -f .env ]; then \
      export $(grep 'UV_INDEX' .env | xargs); \
    fi; \
    uv sync --locked --no-dev

#####################################
# Set up the production environment #
#####################################
FROM base AS production
COPY --from=builder --chown=app:app /app /app
WORKDIR /app
ENV PATH="/app/.venv/bin:$PATH"

COPY ./scripts ./scripts
COPY ./src ./src

RUN chmod +x scripts/entrypoint.sh

ENTRYPOINT ["scripts/entrypoint.sh"]
